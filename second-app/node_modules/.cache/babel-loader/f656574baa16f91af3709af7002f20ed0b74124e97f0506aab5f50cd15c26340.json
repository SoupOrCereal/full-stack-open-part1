{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skunk\\\\OneDrive\\\\Desktop\\\\fullstackopen exercises\\\\part1\\\\second-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Heading = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 31\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 26\n}, this);\n_c = Heading;\nconst StatisticLine = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 32\n}, this);\n_c2 = StatisticLine;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  const total = () => good + neutral + bad;\n  if (total() <= 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 27\n  }, this);\n  const avg = () => {\n    // the average score (good: 1, neutral: 0, bad: -1)\n    let avg = good * 1 + bad * -1;\n    avg /= total();\n    return avg;\n  };\n  const pos = () => good / total() * 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      value: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"good \" + good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"neutral \" + neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"bad \" + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"all \" + total()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"average \" + avg()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: \"positive \" + pos() + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c4 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const addToGood = () => setGood(good + 1);\n  const addToNeutral = () => setNeutral(neutral + 1);\n  const addToBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      value: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: addToGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: addToNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: addToBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Heading\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Heading","props","value","StatisticLine","Button","handleClick","text","Statistics","good","neutral","bad","total","avg","pos","App","setGood","setNeutral","setBad","addToGood","addToNeutral","addToBad"],"sources":["C:/Users/skunk/OneDrive/Desktop/fullstackopen exercises/part1/second-app/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Heading = props => <div><h2>{props.value}</h2></div>\nconst StatisticLine = props => <div>{props.value}</div> \n \n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst Statistics = ({good, neutral, bad}) => {\n  const total = () => good+neutral+bad\n  if(total() <= 0) return(<p>No feedback given</p>);\n  const avg = () => {\n    // the average score (good: 1, neutral: 0, bad: -1)\n    let avg = good * 1 + bad * -1;\n    avg /= total();\n    return avg;\n  }\n  const pos = () => good/total()*100\n  return(\n    <>\n      <Heading value=\"statistics\" />\n      <StatisticLine value={\"good \" + good} />\n      <StatisticLine value={\"neutral \" + neutral} />\n      <StatisticLine value={\"bad \" + bad} />\n      <StatisticLine value={\"all \" + total()} />\n      <StatisticLine value={\"average \" + avg()} />\n      <StatisticLine value={\"positive \" + pos() + \"%\"} />\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const addToGood = () => setGood(good+1)\n  const addToNeutral = () => setNeutral(neutral+1)\n  const addToBad = () => setBad(bad+1)\n\n  return (\n    <div>\n      <Heading value=\"give feedback\" />\n      <Button handleClick={addToGood} text=\"good\" />\n      <Button handleClick={addToNeutral} text=\"neutral\" />\n      <Button handleClick={addToBad} text=\"bad\" />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}